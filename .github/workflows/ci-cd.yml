# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'yarn'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --immutable

      # - name: Test
      #   run: yarn test:ci

      - name: Build production
        run: yarn build:prod

      # - name: Build & deploy staging
      #   if: ${{github.github.ref_name}} == 'develop'
      #   run: |
      #     yarn build
      #     echo "Current branch is ${{ github.github.ref_name }}"
      #     yarn firebase use default
      #     yarn firebase deploy --token ${{ secrets.FIREBASE_TOKEN }} staging
      #     ./deploy.sh staging

      - name: Build & deploy production
        if: ${{ github.ref_name  == 'master' }}
        run: |
          echo "Current branch is ${{ github.ref_name }}"
          yarn firebase use default
          yarn firebase deploy --token ${{ secrets.FIREBASE_TOKEN }}
